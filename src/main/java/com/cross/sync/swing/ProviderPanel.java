package com.cross.sync.swing;

import com.cross.sync.provider.Provider;
import com.cross.sync.swing.controller.ResourceController;
import com.cross.sync.util.Slf4fLogger;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import java.awt.*;
import java.io.IOException;

class ProviderPanel {
    private final DefaultListModel<String> providersModel = new DefaultListModel<>();
    private JPanel panel1;
    private JList<String> list1;
    private JButton addProvider;
    private JButton deleteProvider;
    private JButton changeButton;
    private Integer selectedProviderIndex;

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    public ProviderPanel(SettingsDialog settingsDialog) {
        list1.addListSelectionListener(ev -> selectedProviderIndex = list1.getSelectedIndex());

        addProvider.addActionListener(i -> {
            Dialog dialog = new CreationProviderDialog(settingsDialog, this::updateProviderList, null, null);
            dialog.setLocationRelativeTo(settingsDialog);
            dialog.setVisible(true);
        });

        changeButton.addActionListener(i -> {
            if (selectedProviderIndex != -1) {
                Provider provider = ResourceController.getInstance().getLinuxProviderMap().get(providersModel.get(selectedProviderIndex));
                Dialog dialog = new CreationProviderDialog(settingsDialog, this::updateProviderList, provider, providersModel.get(selectedProviderIndex));
                dialog.setLocationRelativeTo(settingsDialog);
                dialog.setVisible(true);
            }
        });

        deleteProvider.addActionListener(i -> {
            if (selectedProviderIndex != -1) {
                Provider provider = ResourceController.getInstance().getLinuxProviderMap().remove(providersModel.get(selectedProviderIndex));
                try {
                    provider.close();
                } catch (IOException e) {
                    Slf4fLogger.error(this, e.getMessage());
                }
                providersModel.remove(selectedProviderIndex);
                selectedProviderIndex = -1;
            }
        });

        list1.setModel(providersModel);
        updateProviderList();
    }

    private void updateProviderList() {
        providersModel.clear();
        providersModel.addAll(ResourceController.getInstance().getLinuxProviderMap().keySet());
    }

    JPanel getPanel() {
        return panel1;
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        final JScrollPane scrollPane1 = new JScrollPane();
        panel1.add(scrollPane1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        list1 = new JList();
        scrollPane1.setViewportView(list1);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(1, 4, new Insets(0, 0, 0, 0), -1, -1));
        panel1.add(panel2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        addProvider = new JButton();
        addProvider.setText("+");
        panel2.add(addProvider, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(40, -1), null, 0, false));
        final Spacer spacer1 = new Spacer();
        panel2.add(spacer1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        deleteProvider = new JButton();
        deleteProvider.setText("-");
        panel2.add(deleteProvider, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(40, -1), null, 0, false));
        changeButton = new JButton();
        changeButton.setText("Change");
        panel2.add(changeButton, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }

}
